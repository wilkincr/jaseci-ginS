2025-04-29 17:16:20 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:16:21 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:16:27 - [SmartAssert] failed
2025-04-29 17:16:27 - Error: [SmartAssert] failed
   76 |     #     json.dump(output, fp, indent=2)
   77 |         
   78 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   79 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:78
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:19:00 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:19:00 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:19:07 - [Errno 17] File exists: '/Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac'
2025-04-29 17:19:07 - Error: [Errno 17] File exists: '/Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac'

  at makedirs() <frozen os>:225
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:44
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:21:03 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:21:03 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:21:10 - [SmartAssert] failed
2025-04-29 17:21:10 - Error: [SmartAssert] failed
   75 |     #     json.dump(output, fp, indent=2)
   76 |         
   77 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   78 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:77
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:22:01 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:22:01 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:22:09 - [SmartAssert] failed
2025-04-29 17:22:09 - Error: [SmartAssert] failed
   75 |     #     json.dump(output, fp, indent=2)
   76 |         
   77 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   78 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:77
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:23:13 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:1:1 Syntax Error
2025-04-29 17:23:13 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:1:1 Syntax Error
    1 | {
      | ^
    2 |   "timestamp": "2025-04-29T21:22:09.479372Z",
    3 |   "file": "test_1.jac",
    4 |   "prompt": "A smart assertion failed.\n\nHere is the program annotated with control flow, instructions, and variable values:\n\n['import math; # BB: 0 Transitions: BB0->BB2, BB0->BB1', '#   Instructions: [SETUP_ANNOTATIONS(None)]', 'import:py from jaclang.runtimelib.gins.smart_assert, smart_assert; # BB: 3 Transitions: BB3->BB5, BB3->BB4', '#   Instructions: [LOAD_NAME(_jac_typ), LOAD_ATTR(TYPE_CHECKING) [no line], POP_JUMP_IF_FALSE(140) [no line]]', '', 'with entry {', '    testcases_median_buggy: list[tuple[tuple[list[int], list[int]], float]] = [ # BB: 6 Transitions: BB6->BB7', '    #   Instructions: [BUILD_LIST(7)]', '    #   Variable values in this block:   x = 1 (seen 1\u00d7)  y = 1 (seen 1\u00d7)  low = 0 (seen 1\u00d7)  high = 1 (seen 1\u00d7)  got = 2.0 (seen 1\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionY = 1 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  minRightX = 2 (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)', '        (([1, 3], [2]), 2.0), # BB: 6', '        #   Instructions: [LOAD_CONST(1), LOAD_CONST(3) [no line], BUILD_LIST(2) [no line], LOAD_CONST(2) [no line], BUILD_LIST(1) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2.0) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2) [no line], BUILD_LIST(2) [no line], LOAD_CONST(3) [no line], LOAD_CONST(4) [no line], BUILD_LIST(2) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2.5) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(0) [no line], BUILD_LIST(2) [no line], LOAD_CONST(0) [no line], LOAD_CONST(0) [no line], BUILD_LIST(2) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(0.0) [no line], BUILD_TUPLE(2) [no line], BUILD_LIST(1) [no line], BUILD_LIST(0) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2.0) [no line], BUILD_TUPLE(2) [no line], BUILD_LIST(1) [no line], BUILD_LIST(0) [no line], LOAD_CONST((2, 3, 4)) [no line], LIST_EXTEND(1) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2.5) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(4) [no line], BUILD_LIST(2) [no line], LOAD_CONST(2) [no line], LOAD_CONST(3) [no line], BUILD_LIST(2) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(2.5) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(6) [no line], BUILD_LIST(2) [no line], BUILD_LIST(0) [no line], LOAD_CONST((1, 2, 3, 4)) [no line], LIST_EXTEND(1) [no line], BUILD_TUPLE(2) [no line], LOAD_CONST(3.5) [no line], BUILD_TUPLE(2) [no line], STORE_NAME(testcases_median_buggy) [no line], LOAD_CONST(list[tuple[tuple[list[int], list[int]], float]]) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(testcases_median_buggy) [no line], STORE_SUBSCR(None) [no line], GET_ITER(None) [no line]]', '        (([1, 2], [3, 4]), 2.5), # BB: 6', '        #   Instructions: [LOAD_CONST(1)]', '        (([0, 0], [0, 0]), 0.0), # BB: 6', '        #   Instructions: [LOAD_CONST(0)]', '        (([2], []), 2.0), # BB: 6', '        #   Instructions: [LOAD_CONST(2)]', '        (([1], [2, 3, 4]), 2.5), # BB: 6', '        #   Instructions: [LOAD_CONST(1)]', '        (([1, 4], [2, 3]), 2.5), # BB: 6', '        #   Instructions: [LOAD_CONST(1)]', '        (([5, 6], [1, 2, 3, 4]), 3.5) # BB: 6', '        #   Instructions: [LOAD_CONST(5)]', '    ];', '    ', '    for ((nums1, nums2), expected) in testcases_median_buggy { # BB: 6', '    #   Instructions: [LOAD_NAME(testcases_median_buggy), END_FOR(None)]', '        nums1_copy:<>list[int] = <>list(nums1); # BB: 8 Transitions: BB8->BB34, BB8->BB10, BB8->BB9', '        #   Instructions: [FOR_ITER(1028) [no line], UNPACK_SEQUENCE(2) [no line], UNPACK_SEQUENCE(2) [no line], STORE_NAME(nums1) [no line], STORE_NAME(nums2) [no line], STORE_NAME(expected) [no line], PUSH_NULL(None), LOAD_NAME(list) [no line], LOAD_NAME(nums1) [no line], CALL(1) [no line], STORE_NAME(nums1_copy) [no line], LOAD_CONST(list[int]) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(nums1_copy) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(list) [no line], LOAD_NAME(nums2) [no line], CALL(1) [no line], STORE_NAME(nums2_copy) [no line], LOAD_CONST(list[int]) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(nums2_copy) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(len) [no line], LOAD_NAME(nums1_copy) [no line], CALL(1) [no line], STORE_NAME(x) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(x) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(len) [no line], LOAD_NAME(nums2_copy) [no line], CALL(1) [no line], STORE_NAME(y) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(y) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(y) [no line], COMPARE_OP(>) [no line], POP_JUMP_IF_FALSE(500) [no line]]', '        #   Variable values in this block:   x = 2 (seen 4\u00d7)  x = 1 (seen 3\u00d7)  y = 1 (seen 5\u00d7)  y = 2 (seen 1\u00d7)  low = 0 (seen 5\u00d7)  high = 1 (seen 5\u00d7)  got = 2.0 (seen 5\u00d7)  partitionX = 0 (seen 5\u00d7)  partitionY = 1 (seen 5\u00d7)  maxLeftX = -inf (seen 5\u00d7)  minRightX = 2 (seen 5\u00d7)  maxLeftY = 2 (seen 5\u00d7)  minRightY = inf (seen 5\u00d7)', '        nums2_copy:<>list[int] = <>list(nums2); # BB: 8', '        #   Instructions: [PUSH_NULL(None)]', '        ', '        # Algorithm directly inline', '        x:int = len(nums1_copy); # BB: 8', '        #   Instructions: [PUSH_NULL(None)]', '        y:int = len(nums2_copy); # BB: 8', '        #   Instructions: [PUSH_NULL(None)]', '        if x > y { # BB: 8', '        #   Instructions: [LOAD_NAME(x)]', '            nums1_copy:int = nums2_copy; # BB: 9 Transitions: BB9->BB10', '            #   Instructions: [LOAD_NAME(nums2_copy), STORE_NAME(nums1_copy) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(nums1_copy) [no line], STORE_SUBSCR(None) [no line], STORE_NAME(nums2_copy) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(nums2_copy) [no line], STORE_SUBSCR(None) [no line], STORE_NAME(x) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(x) [no line], STORE_SUBSCR(None) [no line], STORE_NAME(y) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(y) [no line], STORE_SUBSCR(None) [no line]]', '            #   Variable values in this block:   x = 2 (seen 3\u00d7)  x = 1 (seen 1\u00d7)  y = 1 (seen 4\u00d7)', '            nums2_copy:int = nums1_copy; # BB: 9', '            #   Instructions: [LOAD_NAME(nums1_copy)]', '            x:int = y; # BB: 9', '            #   Instructions: [LOAD_NAME(y)]', '            y:int = x; # BB: 9', '            #   Instructions: [LOAD_NAME(x)]', '        }', '        low:int = 0; # BB: 10 Transitions: BB10->BB33, BB10->BB11', '        #   Instructions: [LOAD_CONST(0), STORE_NAME(low) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(low) [no line], STORE_SUBSCR(None) [no line], STORE_NAME(high) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(high) [no line], STORE_SUBSCR(None) [no line], STORE_NAME(got) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(got) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(high) [no line], COMPARE_OP(<=) [no line], POP_JUMP_IF_FALSE(1002) [no line]]', '        #   Variable values in this block:   x = 2 (seen 5\u00d7)  x = 1 (seen 4\u00d7)  y = 2 (seen 5\u00d7)  y = 1 (seen 4\u00d7)  low = 0 (seen 7\u00d7)  low = 2 (seen 1\u00d7)  high = 1 (seen 4\u00d7)  high = 2 (seen 3\u00d7)  got = 2.0 (seen 3\u00d7)  got = -1.0 (seen 3\u00d7)  partitionX = 0 (seen 4\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionY = 1 (seen 5\u00d7)  maxLeftX = -inf (seen 4\u00d7)  maxLeftX = 1 (seen 1\u00d7)  minRightX = 2 (seen 5\u00d7)  maxLeftY = 2 (seen 4\u00d7)  maxLeftY = 3 (seen 1\u00d7)  minRightY = inf (seen 4\u00d7)  minRightY = 4 (seen 1\u00d7)', '        high:int = x; # BB: 10', '        #   Instructions: [LOAD_NAME(x)]', '        got:float = -1.0; # BB: 10', '        #   Instructions: [LOAD_CONST(-1.0)]', '        ', '        while low <= high { # BB: 10', '        #   Instructions: [LOAD_NAME(low), LOAD_NAME(low), LOAD_NAME(high) [no line], COMPARE_OP(<=) [no line], POP_JUMP_IF_FALSE(1002) [no line]]', '            partitionX:int = ((low + high) // 2); # BB: 11 Transitions: BB11->BB13, BB11->BB12', '            #   Instructions: [LOAD_NAME(low), LOAD_NAME(high) [no line], BINARY_OP(0) [no line], LOAD_CONST(2) [no line], BINARY_OP(2) [no line], STORE_NAME(partitionX) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(partitionX) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(y) [no line], BINARY_OP(0) [no line], LOAD_CONST(1) [no line], BINARY_OP(0) [no line], LOAD_CONST(2) [no line], BINARY_OP(2) [no line], LOAD_NAME(partitionX) [no line], BINARY_OP(10) [no line], STORE_NAME(partitionY) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(partitionY) [no line], STORE_SUBSCR(None) [no line], LOAD_CONST(0) [no line], COMPARE_OP(!=) [no line], POP_JUMP_IF_FALSE(642) [no line]]', '            #   Variable values in this block:   x = 2 (seen 6\u00d7)  x = 1 (seen 3\u00d7)  y = 2 (seen 6\u00d7)  y = 1 (seen 3\u00d7)  low = 0 (seen 6\u00d7)  low = 2 (seen 3\u00d7)  high = 2 (seen 6\u00d7)  high = 1 (seen 3\u00d7)  got = -1.0 (seen 9\u00d7)  partitionX = 0 (seen 3\u00d7)  partitionX = 1 (seen 3\u00d7)  partitionX = 2 (seen 2\u00d7)  partitionY = 1 (seen 6\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 3\u00d7)  maxLeftX = 1 (seen 3\u00d7)  minRightX = 2 (seen 6\u00d7)  maxLeftY = 2 (seen 3\u00d7)  maxLeftY = 3 (seen 3\u00d7)  minRightY = inf (seen 3\u00d7)  minRightY = 4 (seen 3\u00d7)', '            partitionY:int = ((((x + y) + 1) // 2) - partitionX); # BB: 11', '            #   Instructions: [LOAD_NAME(x)]', \"            maxLeftX:float = nums1_copy[(partitionX - 1)] if partitionX != 0 else float('-inf'); # BB: 11\", '            #   Instructions: [LOAD_NAME(partitionX)]', \"            minRightX:float = nums1_copy[partitionX] if partitionX != x else float('inf'); # BB: 14 Transitions: BB14->BB16, BB14->BB15\", '            #   Instructions: [STORE_NAME(maxLeftX) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(maxLeftX) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(partitionX), LOAD_NAME(x) [no line], COMPARE_OP(!=) [no line], POP_JUMP_IF_FALSE(688) [no line]]', '            #   Variable values in this block:   x = 2 (seen 2\u00d7)  x = 1 (seen 1\u00d7)  y = 2 (seen 2\u00d7)  y = 1 (seen 1\u00d7)  low = 0 (seen 2\u00d7)  low = 2 (seen 1\u00d7)  high = 2 (seen 2\u00d7)  high = 1 (seen 1\u00d7)  got = -1.0 (seen 3\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 2\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 2\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)', \"            maxLeftY:float = nums2_copy[(partitionY - 1)] if partitionY != 0 else float('-inf'); # BB: 17 Transitions: BB17->BB19, BB17->BB18\", '            #   Instructions: [STORE_NAME(minRightX) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(minRightX) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(partitionY), LOAD_CONST(0) [no line], COMPARE_OP(!=) [no line], POP_JUMP_IF_FALSE(740) [no line]]', '            #   Variable values in this block:   x = 2 (seen 2\u00d7)  x = 1 (seen 1\u00d7)  y = 2 (seen 2\u00d7)  y = 1 (seen 1\u00d7)  low = 0 (seen 2\u00d7)  low = 2 (seen 1\u00d7)  high = 2 (seen 2\u00d7)  high = 1 (seen 1\u00d7)  got = -1.0 (seen 3\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 2\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 2\u00d7)  minRightX = inf (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)', \"            minRightY:float = nums2_copy[partitionY] if partitionY != y else float('inf'); # BB: 20 Transitions: BB20->BB22, BB20->BB21\", '            #   Instructions: [STORE_NAME(maxLeftY) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(maxLeftY) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(partitionY), LOAD_NAME(y) [no line], COMPARE_OP(!=) [no line], POP_JUMP_IF_FALSE(786) [no line]]', '            #   Variable values in this block:   x = 2 (seen 2\u00d7)  x = 1 (seen 1\u00d7)  y = 2 (seen 2\u00d7)  y = 1 (seen 1\u00d7)  low = 0 (seen 2\u00d7)  low = 2 (seen 1\u00d7)  high = 2 (seen 2\u00d7)  high = 1 (seen 1\u00d7)  got = -1.0 (seen 3\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 2\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 2\u00d7)  minRightX = inf (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  maxLeftY = -inf (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)', '            ', '            if maxLeftX <= minRightY and maxLeftY <= minRightX { # BB: 23 Transitions: BB23->BB28, BB23->BB24', '            #   Instructions: [STORE_NAME(minRightY) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(minRightY) [no line], STORE_SUBSCR(None) [no line], LOAD_NAME(maxLeftX), LOAD_NAME(minRightY) [no line], COMPARE_OP(<=) [no line], POP_JUMP_IF_FALSE(938) [no line]]', '            #   Variable values in this block:   x = 2 (seen 2\u00d7)  x = 1 (seen 1\u00d7)  y = 2 (seen 2\u00d7)  y = 1 (seen 1\u00d7)  low = 0 (seen 2\u00d7)  low = 2 (seen 1\u00d7)  high = 2 (seen 2\u00d7)  high = 1 (seen 1\u00d7)  got = -1.0 (seen 3\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 2\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 2\u00d7)  minRightX = inf (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  maxLeftY = -inf (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)  minRightY = 3 (seen 1\u00d7)', '                if ((x + y) % 2) == 0 { # BB: 25 Transitions: BB25->BB27, BB25->BB26', '                #   Instructions: [LOAD_NAME(x), LOAD_NAME(y) [no line], BINARY_OP(0) [no line], LOAD_CONST(2) [no line], BINARY_OP(6) [no line], LOAD_CONST(0) [no line], COMPARE_OP(==) [no line], POP_JUMP_IF_FALSE(896) [no line]]', '                #   Variable values in this block:   x = 1 (seen 1\u00d7)  x = 2 (seen 1\u00d7)  y = 1 (seen 1\u00d7)  y = 2 (seen 1\u00d7)  low = 0 (seen 1\u00d7)  low = 2 (seen 1\u00d7)  high = 1 (seen 1\u00d7)  high = 2 (seen 1\u00d7)  got = -1.0 (seen 2\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 1\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 1\u00d7)  minRightX = inf (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = -inf (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 3 (seen 1\u00d7)', '                    got:float = ((max(maxLeftX, maxLeftY) + minRightX) / 2.0); # BB: 26 Transitions: BB26->BB33', '                    #   Instructions: [PUSH_NULL(None), LOAD_NAME(max) [no line], LOAD_NAME(maxLeftX) [no line], LOAD_NAME(maxLeftY) [no line], CALL(2) [no line], LOAD_NAME(minRightX) [no line], BINARY_OP(0) [no line], LOAD_CONST(2.0) [no line], BINARY_OP(11) [no line], STORE_NAME(got) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(got) [no line], STORE_SUBSCR(None) [no line]]', '                    #   Variable values in this block:   x = 1 (seen 2\u00d7)  x = 2 (seen 2\u00d7)  y = 1 (seen 2\u00d7)  y = 2 (seen 2\u00d7)  low = 0 (seen 2\u00d7)  low = 2 (seen 2\u00d7)  high = 1 (seen 2\u00d7)  high = 2 (seen 2\u00d7)  got = -1.0 (seen 2\u00d7)  got = 2.0 (seen 1\u00d7)  got = inf (seen 1\u00d7)  partitionX = 0 (seen 2\u00d7)  partitionX = 2 (seen 2\u00d7)  partitionY = 1 (seen 2\u00d7)  partitionY = 0 (seen 2\u00d7)  maxLeftX = -inf (seen 2\u00d7)  maxLeftX = 2 (seen 2\u00d7)  minRightX = 2 (seen 2\u00d7)  minRightX = inf (seen 2\u00d7)  maxLeftY = 2 (seen 2\u00d7)  maxLeftY = -inf (seen 2\u00d7)  minRightY = inf (seen 2\u00d7)  minRightY = 3 (seen 2\u00d7)', '                    break; # BB: 26', '                    #   Instructions: [JUMP_FORWARD(1002)]', '                } else {', '                    got:float = float(max(maxLeftX, maxLeftY)); # BB: 27 Transitions: BB27->BB33', '                    #   Instructions: [PUSH_NULL(None), LOAD_NAME(float) [no line], PUSH_NULL(None) [no line], LOAD_NAME(max) [no line], LOAD_NAME(maxLeftX) [no line], LOAD_NAME(maxLeftY) [no line], CALL(2) [no line], CALL(1) [no line], STORE_NAME(got) [no line], LOAD_CONST(float) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(got) [no line], STORE_SUBSCR(None) [no line]]', '                    break; # BB: 27', '                    #   Instructions: [JUMP_FORWARD(1002)]', '                }', '            } elif maxLeftX > minRightY { # BB: 28 Transitions: BB28->BB30, BB28->BB29', '            #   Instructions: [LOAD_NAME(maxLeftX), LOAD_NAME(minRightY) [no line], COMPARE_OP(>) [no line], POP_JUMP_IF_FALSE(970) [no line]]', '            #   Variable values in this block:   x = 2 (seen 1\u00d7)  y = 2 (seen 1\u00d7)  low = 0 (seen 1\u00d7)  high = 2 (seen 1\u00d7)  got = -1.0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionY = 1 (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  minRightX = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)', '                high:int = (partitionX - 1); # BB: 29 Transitions: BB29->BB31', '                #   Instructions: [LOAD_NAME(partitionX), LOAD_CONST(1) [no line], BINARY_OP(10) [no line], STORE_NAME(high) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(high) [no line], STORE_SUBSCR(None) [no line], JUMP_FORWARD(990) [no line]]', '            } else {', '                low:int = (partitionX + 1); # BB: 30 Transitions: BB30->BB31', '                #   Instructions: [LOAD_NAME(partitionX), LOAD_CONST(1) [no line], BINARY_OP(0) [no line], STORE_NAME(low) [no line], LOAD_CONST(int) [no line], LOAD_NAME(__annotations__) [no line], LOAD_CONST(low) [no line], STORE_SUBSCR(None) [no line]]', '                #   Variable values in this block:   x = 2 (seen 1\u00d7)  y = 2 (seen 1\u00d7)  low = 0 (seen 1\u00d7)  high = 2 (seen 1\u00d7)  got = -1.0 (seen 1\u00d7)  partitionX = 1 (seen 1\u00d7)  partitionY = 1 (seen 1\u00d7)  maxLeftX = 1 (seen 1\u00d7)  minRightX = 2 (seen 1\u00d7)  maxLeftY = 3 (seen 1\u00d7)  minRightY = 4 (seen 1\u00d7)', '            }', '        }', '        ', '        smart_assert(got == expected); # BB: 33 Transitions: BB33->BB7', '        #   Instructions: [PUSH_NULL(None), LOAD_NAME(smart_assert) [no line], LOAD_NAME(got) [no line], LOAD_NAME(expected) [no line], COMPARE_OP(==) [no line], CALL(1) [no line], POP_TOP(None) [no line], EXTENDED_ARG(1) [no line], JUMP_BACKWARD(310) [no line]]', '        #   Variable values in this block:   x = 1 (seen 1\u00d7)  x = 2 (seen 1\u00d7)  y = 1 (seen 1\u00d7)  y = 2 (seen 1\u00d7)  low = 0 (seen 1\u00d7)  low = 2 (seen 1\u00d7)  high = 1 (seen 1\u00d7)  high = 2 (seen 1\u00d7)  got = 2.0 (seen 1\u00d7)  got = inf (seen 1\u00d7)  partitionX = 0 (seen 1\u00d7)  partitionX = 2 (seen 1\u00d7)  partitionY = 1 (seen 1\u00d7)  partitionY = 0 (seen 1\u00d7)  maxLeftX = -inf (seen 1\u00d7)  maxLeftX = 2 (seen 1\u00d7)  minRightX = 2 (seen 1\u00d7)  minRightX = inf (seen 1\u00d7)  maxLeftY = 2 (seen 1\u00d7)  maxLeftY = -inf (seen 1\u00d7)  minRightY = inf (seen 1\u00d7)  minRightY = 3 (seen 1\u00d7)', '    }', '}']\n\nPlease explain why this failure occurred and how to fix it.",
    5 |   "response": "The assertion failure in this code stems from a flaw in the algorithm for finding the median of two sorted arrays, combined with incorrect handling of edge cases and potential off-by-one errors in array indexing.  Let's break down the issues:\n\n**1. Algorithm Flaw/Edge Case Handling:**\n\nThe core logic attempts to find the median by partitioning both arrays. The `partitionX` and `partitionY` calculations aim to split the combined arrays in half. However, the code doesn't correctly handle cases where:\n\n* **Arrays are of unequal length:** The code swaps arrays if `x > y`, but the subsequent logic doesn't perfectly adjust for the changed lengths. The partitioning strategy relies on implicitly handling the combined length, and this adjustment is insufficient.\n\n* **`partitionX` or `partitionY` is 0 or equal to the array length:** The lines accessing `nums1_copy[(partitionX - 1)]` and `nums2_copy[(partitionY - 1)]` will cause an `IndexError` if `partitionX` or `partitionY` is 0. Similarly, accessing `nums1_copy[partitionX]`  and `nums2_copy[partitionY]` will cause an error if `partitionX == x` or `partitionY == y`. The use of `float('-inf')` and `float('inf')` is an attempt to handle this, but it's not robust enough and leads to incorrect median calculations in some cases.\n\n**2.  Off-by-One Errors:**\n\nThere's a high probability of off-by-one errors in calculating indices, especially around `partitionX` and `partitionY`.  The logic for `maxLeftX`, `minRightX`, `maxLeftY`, and `minRightY` needs careful review to ensure correct indexing regardless of array lengths and partition values.\n\n**3. Incorrect Median Calculation (Even if indexing were correct):**\n\nEven if the partitioning and indexing were perfect, the logic for determining the median when `(x + y) % 2 == 0` (even total length) might be incorrect.  The formula `((max(maxLeftX, maxLeftY) + minRightX) / 2.0)` assumes that `minRightX` is always a valid element; it's not necessarily true because it might be `inf`.  Similarly, the odd length case using `max(maxLeftX, maxLeftY)` might fail to accurately represent the median.\n\n**How to Fix It:**\n\n1. **Robust Partitioning:**  Revisit the way `partitionX` and `partitionY` are calculated.  Ensure the partitioning respects the lengths of both arrays, even after potential swaps.  A more standard approach to finding the median of two sorted arrays involves binary search-like partitioning.\n\n2. **Handle Edge Cases Gracefully:**  Explicitly check for the edge cases (`partitionX == 0`, `partitionX == x`, `partitionY == 0`, `partitionY == y`) before accessing elements using those indices.  Use conditional statements to handle these situations correctly (e.g., return appropriate boundary values instead of trying to use `float('-inf')` and `float('inf')`).\n\n3. **Refine Median Calculation:** The formulas for calculating the median need to be reviewed and corrected based on the adjusted partitioning and edge case handling.\n\n4. **Step-by-Step Debugging:** Use a debugger to step through the code with various test cases (especially those near the edge conditions).  This will quickly reveal where the indices are going wrong or where the median calculation logic is flawed.\n\n5. **Consider a Standard Algorithm:**  Instead of implementing the algorithm from scratch, research and use a well-tested and established algorithm for finding the median of two sorted arrays.  Many such algorithms are readily available online. This will significantly reduce the risk of errors.\n\n\n**Example of a More Robust Approach (Conceptual):**\n\nA more standard approach would involve binary search to find the partition point efficiently, without the potential for errors in the original code's partitioning and indexing. You'd iterate, adjusting the partition points until you find the correct median.  This approach typically involves fewer calculations prone to off-by-one errors.\n\n\nIn summary, the failure is a consequence of multiple intertwined issues in the algorithm's logic, not just a simple bug. A complete rewrite focusing on robust partitioning and median calculation, possibly using a standard algorithm, is needed for a reliable solution.  The detailed analysis of the provided annotated code highlights areas needing the most attention.",
2025-04-29 17:23:36 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:23:36 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:23:43 - [Errno 20] Not a directory: '/Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac/test_1.jac_complete_report_20250429_212343698972.json'
2025-04-29 17:23:43 - Error: [Errno 20] Not a directory: '/Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac/test_1.jac_complete_report_20250429_212343698972.json'
   44 |     fname = f"{file_name}_complete_report_{datetime.utcnow():%Y%m%d_%H%M%S%f}.json"
   45 |     full_path = os.path.join(file_path, fname)
   46 |     with open(full_path, "w") as fp:
      |         ^^^^^^^^^^^^^^^^^^^^
   47 |         json.dump(report, fp, indent=2)
   48 |     
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:46
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:25:09 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:25:09 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:25:16 - [SmartAssert] failed
2025-04-29 17:25:16 - Error: [SmartAssert] failed
   75 |     #     json.dump(output, fp, indent=2)
   76 |         
   77 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   78 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:77
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:27:59 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:28:00 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:28:10 - [SmartAssert] failed
2025-04-29 17:28:10 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:28:48 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_2-LC41/test_2.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:28:48 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 24, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 24, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 4, 'predicted_edges': [{'edge_to_bb_id': 18, 'freq': 0}, {'edge_to_bb_id': 7, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 18, 'freq': 1}, {'edge_to_bb_id': 7, 'freq': 2}, {'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 9, 'freq': 0}, {'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 9, 'freq': 2}, {'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 8, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 9, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 2}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 2}]}, {'bb_id': 11, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}]}, {'bb_id': 12, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 13, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 15, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 18, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}, {'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 1}, {'edge_to_bb_id': 20, 'freq': 0}]}, {'bb_id': 20, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 0}]}, {'bb_id': 21, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 22, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 0}]}, {'bb_id': 23, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 24, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:28:55 - [SmartAssert] failed
2025-04-29 17:28:55 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_2-LC41/test_2.jac:37
2025-04-29 17:29:13 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:29:16 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 8, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 7}]}, {'bb_id': 5, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 7}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 7}]}, {'bb_id': 7, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 39}]}, {'bb_id': 8, 'freq': 131, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 39}, {'edge_to_bb_id': 10, 'freq': 68}, {'edge_to_bb_id': 9, 'freq': 24}]}, {'bb_id': 9, 'freq': 24, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 24}]}, {'bb_id': 10, 'freq': 68, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 46}, {'edge_to_bb_id': 11, 'freq': 22}]}, {'bb_id': 11, 'freq': 22, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 22}]}, {'bb_id': 12, 'freq': 46, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 46}]}, {'bb_id': 13, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 32}, {'edge_to_bb_id': 14, 'freq': 7}]}, {'bb_id': 14, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 7}]}, {'bb_id': 15, 'freq': 32, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 32}]}, {'bb_id': 16, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 7}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:30:07 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:2:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:30:07 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}, {'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 1}, {'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 4, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 8, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 34, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}]}, {'bb_id': 10, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 12, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 12, 'freq': 2}]}, {'bb_id': 12, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 2}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}, {'edge_to_bb_id': 15, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}, {'edge_to_bb_id': 15, 'freq': 2}]}, {'bb_id': 15, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 2}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 1}]}, {'bb_id': 17, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 19, 'freq': 0}, {'edge_to_bb_id': 18, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 19, 'freq': 1}, {'edge_to_bb_id': 18, 'freq': 2}]}, {'bb_id': 18, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 2}]}, {'bb_id': 19, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 20, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 20, 'freq': 1}]}, {'bb_id': 20, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 22, 'freq': 0}, {'edge_to_bb_id': 21, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 22, 'freq': 1}, {'edge_to_bb_id': 21, 'freq': 2}]}, {'bb_id': 21, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 2}]}, {'bb_id': 22, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 23, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 23, 'freq': 1}]}, {'bb_id': 23, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 24, 'freq': 3}]}, {'bb_id': 24, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 28, 'freq': 0}, {'edge_to_bb_id': 25, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 28, 'freq': 1}, {'edge_to_bb_id': 25, 'freq': 2}]}, {'bb_id': 25, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 27, 'freq': 0}, {'edge_to_bb_id': 26, 'freq': 2}]}, {'bb_id': 26, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 2}]}, {'bb_id': 27, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}]}, {'bb_id': 28, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 30, 'freq': 0}, {'edge_to_bb_id': 29, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 30, 'freq': 1}, {'edge_to_bb_id': 29, 'freq': 0}]}, {'bb_id': 29, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 0}]}, {'bb_id': 30, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 31, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 31, 'freq': 1}]}, {'bb_id': 31, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 33, 'freq': 0}, {'edge_to_bb_id': 32, 'freq': 1}]}, {'bb_id': 32, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 33, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 34, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:30:16 - [SmartAssert] failed
2025-04-29 17:30:16 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_1-LC4/test_1.jac:55
2025-04-29 17:31:19 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:31:22 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 8, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 7}]}, {'bb_id': 5, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 7}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 7}]}, {'bb_id': 7, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 39}]}, {'bb_id': 8, 'freq': 131, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 39}, {'edge_to_bb_id': 10, 'freq': 68}, {'edge_to_bb_id': 9, 'freq': 24}]}, {'bb_id': 9, 'freq': 24, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 24}]}, {'bb_id': 10, 'freq': 68, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 46}, {'edge_to_bb_id': 11, 'freq': 22}]}, {'bb_id': 11, 'freq': 22, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 22}]}, {'bb_id': 12, 'freq': 46, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 46}]}, {'bb_id': 13, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 32}, {'edge_to_bb_id': 14, 'freq': 7}]}, {'bb_id': 14, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 7}]}, {'bb_id': 15, 'freq': 32, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 32}]}, {'bb_id': 16, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 7}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:32:12 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_4-LC213/test_4.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:32:12 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 5, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}, {'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 1}, {'edge_to_bb_id': 7, 'freq': 0}]}, {'bb_id': 7, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 0}]}, {'bb_id': 8, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 9, 'freq': 1}]}, {'bb_id': 9, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 10, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 1}]}, {'bb_id': 11, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 12, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:32:18 - [SmartAssert] failed
2025-04-29 17:32:18 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_4-LC213/test_4.jac:37
2025-04-29 17:32:28 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_5-LC209/test_5.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:32:28 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 14, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 14, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 7, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 7, 'freq': 3}, {'edge_to_bb_id': 6, 'freq': 3}]}, {'bb_id': 6, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 3}]}, {'bb_id': 7, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 9, 'freq': 0}, {'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 9, 'freq': 3}, {'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 8, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 0}]}, {'bb_id': 9, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 3}]}, {'bb_id': 10, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 1}, {'edge_to_bb_id': 11, 'freq': 0}]}, {'bb_id': 11, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 0}]}, {'bb_id': 12, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:32:35 - [SmartAssert] failed
2025-04-29 17:32:35 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_5-LC209/test_5.jac:40
2025-04-29 17:32:46 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_6-LC1480/test_6.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:32:46 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 7, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:32:51 - [SmartAssert] failed
2025-04-29 17:32:51 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_6-LC1480/test_6.jac:34
2025-04-29 17:33:04 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_7-LC1672/test_7.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:33:04 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 11, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 11, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 10, 'freq': 1}, {'edge_to_bb_id': 6, 'freq': 2}]}, {'bb_id': 6, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}, {'edge_to_bb_id': 6, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 2}, {'edge_to_bb_id': 6, 'freq': 0}]}, {'bb_id': 7, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 9, 'freq': 0}, {'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 9, 'freq': 2}, {'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 8, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 9, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 5, 'freq': 2}]}, {'bb_id': 10, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 11, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:33:10 - [SmartAssert] failed
2025-04-29 17:33:10 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_7-LC1672/test_7.jac:30
2025-04-29 17:33:40 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:33:43 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 8, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 7}]}, {'bb_id': 5, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 7}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 7}]}, {'bb_id': 7, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 39}]}, {'bb_id': 8, 'freq': 131, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 39}, {'edge_to_bb_id': 10, 'freq': 68}, {'edge_to_bb_id': 9, 'freq': 24}]}, {'bb_id': 9, 'freq': 24, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 24}]}, {'bb_id': 10, 'freq': 68, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 46}, {'edge_to_bb_id': 11, 'freq': 22}]}, {'bb_id': 11, 'freq': 22, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 22}]}, {'bb_id': 12, 'freq': 46, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 46}]}, {'bb_id': 13, 'freq': 39, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 32}, {'edge_to_bb_id': 14, 'freq': 7}]}, {'bb_id': 14, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 7}]}, {'bb_id': 15, 'freq': 32, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 32}]}, {'bb_id': 16, 'freq': 7, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 7}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:33:50 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:33:51 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 9, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 9}]}, {'bb_id': 8, 'freq': 36, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 9}, {'edge_to_bb_id': 10, 'freq': 21}, {'edge_to_bb_id': 9, 'freq': 6}]}, {'bb_id': 9, 'freq': 6, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 6}]}, {'bb_id': 10, 'freq': 21, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 13}, {'edge_to_bb_id': 11, 'freq': 8}]}, {'bb_id': 11, 'freq': 8, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 8}]}, {'bb_id': 12, 'freq': 13, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 13}]}, {'bb_id': 13, 'freq': 9, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 8}, {'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}]}, {'bb_id': 15, 'freq': 8, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 8}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:33:59 - [SmartAssert] failed
2025-04-29 17:33:59 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:55
2025-04-29 17:34:38 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:34:38 - list index out of range
2025-04-29 17:34:38 - Error: list index out of range
   37 | 
   38 |             for j in range(len(lists)  +  1) {
   39 |                 if pointers[j] < len(lists[j]) {
      |                    ^^^^^^^^^^^
   40 |                     if lists[j][pointers[j]] < min_val {
   41 |                         min_val:int = lists[j][pointers[j]];
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:39
2025-04-29 17:34:41 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 1}]}, {'bb_id': 8, 'freq': 4, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 3}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 1}, {'edge_to_bb_id': 11, 'freq': 2}]}, {'bb_id': 11, 'freq': 2, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 2}]}, {'bb_id': 12, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 1}]}, {'bb_id': 13, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 0}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:35:39 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:35:43 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 45, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 45}]}, {'bb_id': 8, 'freq': 179, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 44}, {'edge_to_bb_id': 10, 'freq': 134}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 134, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 45}, {'edge_to_bb_id': 11, 'freq': 89}]}, {'bb_id': 11, 'freq': 89, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 89}]}, {'bb_id': 12, 'freq': 45, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 45}]}, {'bb_id': 13, 'freq': 44, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 44}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 44, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 44}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:35:46 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 85, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 85}]}, {'bb_id': 8, 'freq': 337, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 84}, {'edge_to_bb_id': 10, 'freq': 253}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 253, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 85}, {'edge_to_bb_id': 11, 'freq': 168}]}, {'bb_id': 11, 'freq': 168, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 168}]}, {'bb_id': 12, 'freq': 85, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 84}]}, {'bb_id': 13, 'freq': 84, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 84}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 84, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 84}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:35:50 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 122, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 122}]}, {'bb_id': 8, 'freq': 486, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 121}, {'edge_to_bb_id': 10, 'freq': 365}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 365, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 122}, {'edge_to_bb_id': 11, 'freq': 242}]}, {'bb_id': 11, 'freq': 242, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 242}]}, {'bb_id': 12, 'freq': 122, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 122}]}, {'bb_id': 13, 'freq': 121, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 121}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 121, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 121}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:35:53 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 156, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 156}]}, {'bb_id': 8, 'freq': 622, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 155}, {'edge_to_bb_id': 10, 'freq': 466}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 466, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 156}, {'edge_to_bb_id': 11, 'freq': 310}]}, {'bb_id': 11, 'freq': 310, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 310}]}, {'bb_id': 12, 'freq': 156, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 156}]}, {'bb_id': 13, 'freq': 155, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 155}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 155, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 155}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:35:57 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 188, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 188}]}, {'bb_id': 8, 'freq': 751, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 187}, {'edge_to_bb_id': 10, 'freq': 563}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 563, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 188}, {'edge_to_bb_id': 11, 'freq': 375}]}, {'bb_id': 11, 'freq': 375, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 375}]}, {'bb_id': 12, 'freq': 188, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 188}]}, {'bb_id': 13, 'freq': 187, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 187}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 187, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 187}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:00 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 218, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 218}]}, {'bb_id': 8, 'freq': 870, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 217}, {'edge_to_bb_id': 10, 'freq': 652}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 652, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 218}, {'edge_to_bb_id': 11, 'freq': 434}]}, {'bb_id': 11, 'freq': 434, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 434}]}, {'bb_id': 12, 'freq': 218, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 218}]}, {'bb_id': 13, 'freq': 217, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 217}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 217, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 217}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:04 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 247, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 247}]}, {'bb_id': 8, 'freq': 985, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 246}, {'edge_to_bb_id': 10, 'freq': 739}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 739, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 247}, {'edge_to_bb_id': 11, 'freq': 492}]}, {'bb_id': 11, 'freq': 492, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 492}]}, {'bb_id': 12, 'freq': 247, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 246}]}, {'bb_id': 13, 'freq': 246, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 246}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 246, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 246}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:07 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 275, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 275}]}, {'bb_id': 8, 'freq': 1098, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 274}, {'edge_to_bb_id': 10, 'freq': 823}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 823, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 275}, {'edge_to_bb_id': 11, 'freq': 548}]}, {'bb_id': 11, 'freq': 548, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 548}]}, {'bb_id': 12, 'freq': 275, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 275}]}, {'bb_id': 13, 'freq': 274, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 274}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 274, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 274}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:27 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:36:31 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 43, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 43}]}, {'bb_id': 8, 'freq': 171, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 42}, {'edge_to_bb_id': 10, 'freq': 88}, {'edge_to_bb_id': 9, 'freq': 40}]}, {'bb_id': 9, 'freq': 40, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 40}]}, {'bb_id': 10, 'freq': 88, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 45}, {'edge_to_bb_id': 11, 'freq': 43}]}, {'bb_id': 11, 'freq': 43, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 43}]}, {'bb_id': 12, 'freq': 45, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 45}]}, {'bb_id': 13, 'freq': 42, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 42}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 42, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 42}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:34 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 82, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 82}]}, {'bb_id': 8, 'freq': 327, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 81}, {'edge_to_bb_id': 10, 'freq': 166}, {'edge_to_bb_id': 9, 'freq': 79}]}, {'bb_id': 9, 'freq': 79, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 79}]}, {'bb_id': 10, 'freq': 166, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 84}, {'edge_to_bb_id': 11, 'freq': 82}]}, {'bb_id': 11, 'freq': 82, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 82}]}, {'bb_id': 12, 'freq': 84, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 84}]}, {'bb_id': 13, 'freq': 81, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 81}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 81, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 81}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:38 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 119, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 119}]}, {'bb_id': 8, 'freq': 474, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 118}, {'edge_to_bb_id': 10, 'freq': 239}, {'edge_to_bb_id': 9, 'freq': 116}]}, {'bb_id': 9, 'freq': 116, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 116}]}, {'bb_id': 10, 'freq': 239, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 120}, {'edge_to_bb_id': 11, 'freq': 119}]}, {'bb_id': 11, 'freq': 119, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 119}]}, {'bb_id': 12, 'freq': 120, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 120}]}, {'bb_id': 13, 'freq': 118, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 118}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 118, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 118}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:41 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 153, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 153}]}, {'bb_id': 8, 'freq': 610, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 152}, {'edge_to_bb_id': 10, 'freq': 308}, {'edge_to_bb_id': 9, 'freq': 150}]}, {'bb_id': 9, 'freq': 150, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 150}]}, {'bb_id': 10, 'freq': 308, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 154}, {'edge_to_bb_id': 11, 'freq': 153}]}, {'bb_id': 11, 'freq': 153, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 153}]}, {'bb_id': 12, 'freq': 154, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 154}]}, {'bb_id': 13, 'freq': 152, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 152}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 152, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 152}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:36:45 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 185, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 185}]}, {'bb_id': 8, 'freq': 740, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 185}, {'edge_to_bb_id': 10, 'freq': 373}, {'edge_to_bb_id': 9, 'freq': 182}]}, {'bb_id': 9, 'freq': 182, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 182}]}, {'bb_id': 10, 'freq': 373, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 187}, {'edge_to_bb_id': 11, 'freq': 186}]}, {'bb_id': 11, 'freq': 186, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 186}]}, {'bb_id': 12, 'freq': 187, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 187}]}, {'bb_id': 13, 'freq': 185, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 185}, {'edge_to_bb_id': 14, 'freq': 0}]}, {'bb_id': 14, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 0}]}, {'bb_id': 15, 'freq': 185, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 184}]}, {'bb_id': 16, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:37:10 - /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:1:1 Deprecated syntax, use braces for multiple imports (e.g, import from mymod {a, b, c})
2025-04-29 17:37:11 - {'cfg_bbs': [{'bb_id': 0, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 2, 'freq': 0}, {'edge_to_bb_id': 1, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 2, 'freq': 1}, {'edge_to_bb_id': 1, 'freq': 0}]}, {'bb_id': 1, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 0}]}, {'bb_id': 2, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 3, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 3, 'freq': 1}]}, {'bb_id': 3, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 1}]}, {'bb_id': 4, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 17, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 1}]}, {'bb_id': 5, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 6, 'freq': 0}, {'edge_to_bb_id': 5, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 6, 'freq': 1}, {'edge_to_bb_id': 5, 'freq': 0}]}, {'bb_id': 6, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 1}]}, {'bb_id': 7, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 1}]}, {'bb_id': 8, 'freq': 4, 'predicted_edges': [{'edge_to_bb_id': 13, 'freq': 0}, {'edge_to_bb_id': 10, 'freq': 0}, {'edge_to_bb_id': 9, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 13, 'freq': 1}, {'edge_to_bb_id': 10, 'freq': 3}, {'edge_to_bb_id': 9, 'freq': 0}]}, {'bb_id': 9, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 10, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 12, 'freq': 0}, {'edge_to_bb_id': 11, 'freq': 3}]}, {'bb_id': 11, 'freq': 3, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 3}]}, {'bb_id': 12, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 8, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 8, 'freq': 0}]}, {'bb_id': 13, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 15, 'freq': 0}, {'edge_to_bb_id': 14, 'freq': 1}]}, {'bb_id': 14, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 16, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 16, 'freq': 1}]}, {'bb_id': 15, 'freq': 0, 'predicted_edges': [{'edge_to_bb_id': 7, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 7, 'freq': 0}]}, {'bb_id': 16, 'freq': 1, 'predicted_edges': [{'edge_to_bb_id': 4, 'freq': 0}], 'actual_edges': [{'edge_to_bb_id': 4, 'freq': 0}]}, {'bb_id': 17, 'freq': 0, 'predicted_edges': [], 'actual_edges': []}]}
2025-04-29 17:37:18 - [SmartAssert] failed
2025-04-29 17:37:18 - Error: [SmartAssert] failed
   78 |     #     json.dump(output, fp, indent=2)
   79 |         
   80 |     raise AssertionError(f"[SmartAssert] failed")
      |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   81 | 
  at smart_assert() /Users/kazu/Desktop/583gins/jaseci-ginS/jac/jaclang/runtimelib/gins/smart_assert.py:80
  at <module> /Users/kazu/Desktop/583gins/jaseci-ginS/jac/examples/final_test_cases/test_suite/test_3-LC23/test_3.jac:55
